name: Build test CI

on:
  push:
    branches: [ "master", "uroboros" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-recent-gcc-debug:
    runs-on: ubuntu-latest
    container:
        image: usiverify/verify-env:current
        credentials:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
        env:
          CMAKE_BUILD_TYPE: Debug
          FLAGS: -Wall -Wextra -Werror

    steps:
      - uses: actions/checkout@v3
      - name: Debug build gcc
        run: ./ci/run_commands.sh


  build-recent-gcc-release:
    runs-on: ubuntu-latest
    container:
      image: usiverify/verify-env:current
      credentials:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD
      env:
        CMAKE_BUILD_TYPE: Release
        FLAGS: -Wall -Wextra -Werror

    steps:
      - uses: actions/checkout@v3
      - name: Release build gcc
        run: ./ci/run_commands.sh


  build-recent-clang-debug:
    runs-on: macos-latest
    container:
      image: usiverify/verify-env:current
      credentials:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD
      env:
        CMAKE_BUILD_TYPE: Debug
        FLAGS: -Wall -Wextra -Werror -fsanitize=signed-integer-overflow,address,undefined

    steps:
      - uses: actions/checkout@v3
      - name: Setup clang
        run: sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 60
      - name: Debug build clang
        run: ./ci/run_commands.sh


  build-recent-clang-release:
    runs-on: ubuntu-latest
    container:
      image: usiverify/verify-env:current
      credentials:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD
      env:
        CMAKE_BUILD_TYPE: Release
        FLAGS: -Wall -Wextra -Werror

    steps:
      - uses: actions/checkout@v3
      - name: Setup clang
        run: sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 60
      - name: Debug build clang
        run: ./ci/run_commands.sh


  build-starexec-debug:
    runs-on: ubuntu-18.04
    container:
      image: usiverify/verify-env:starexec
      credentials:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD
      env:
        CMAKE_BUILD_TYPE: Debug
        FLAGS: -Wall -Wextra -Werror

    steps:
      - uses: actions/checkout@v3
      - name: Debug build gcc under devtoolset-8
        run: cat ./ci/run_commands.sh | scl enable devtoolset-8 bash


  build-starexec-release:
    runs-on: ubuntu-18.04
    container:
      image: usiverify/verify-env:starexec
      credentials:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD
      env:
        CMAKE_BUILD_TYPE: Release
        FLAGS: -Wall -Wextra -Werror

    steps:
      - uses: actions/checkout@v3
      - name: Release build gcc under devtoolset-8
        run: cat ./ci/build_maximally_static.sh | scl enable devtoolset-8 bash


  build-macos:
    runs-on: macos-latest

    steps:
      - name: Set env variables
        run: echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $BASH_ENV
      - name: Packages
        run: |
            brew install cmake
            brew install gmp
            brew install bison
            brew install flex
      - uses: actions/checkout@v3
      - name: Store path
        run: echo 'export PATH=/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH' >> $BASH_ENV
      - name: Release build OS X
        run: ./ci/run_commands.sh
        env:
          CMAKE_BUILD_TYPE: Release
          FLAGS: -Wall -Wextra -Werror

#workflows:
#  build-test:
#    jobs:
#      - build-starexec-debug:
#        filters: &filters-build-test
#          tags:
#            only: /^v.*/
#      - build-starexec-release:
#        filters:
#          <<: *filters-build-test
#      - build-recent-clang-debug:
#        filters:
#          <<: *filters-build-test
#      - build-recent-clang-release:
#        filters:
#          <<: *filters-build-test
#      - build-recent-gcc-debug:
#        filters:
#          <<: *filters-build-test
#      - build-recent-gcc-release:
#        filters:
#          <<: *filters-build-test
#      - build-macos:
#        filters:
#          <<: *filters-build-test
