version: 2.1
jobs:
    formatter:
      docker:
        - image: usiverify/verify-env:current
          auth:
            username: mydockerhub-user
            password: $DOCKERHUB_PASSWORD

      steps:
        - checkout
        - run:
            name: run clang formatter
            command: cat .clang-files | xargs clang-format --Werror --dry-run

    build-recent-gcc-debug:
        docker:
          - image: usiverify/verify-env:current
            auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
            environment:
                CMAKE_BUILD_TYPE: Debug
                FLAGS: -Wall -Wextra -Werror

        steps:
            - checkout
            - run:
                name: Debug build gcc
                command: ./ci/run_commands.sh


    build-recent-gcc-release:
        docker:
          - image: usiverify/verify-env:current
            auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
            environment:
                CMAKE_BUILD_TYPE: Release
                FLAGS: -Wall -Wextra -Werror

        steps:
            - checkout
            - run:
                name: Release build gcc
                command: ./ci/run_commands.sh


    build-recent-clang-debug:
        docker:
          - image: usiverify/verify-env:current
            auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
            environment:
                CMAKE_BUILD_TYPE: Debug
                FLAGS: -Wall -Wextra -Werror -fsanitize=signed-integer-overflow,address,undefined

        steps:
            - checkout
            - run:
               name: Setup clang
               command: sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 60
            - run:
                name: Debug build clang
                command: ./ci/run_commands.sh


    build-recent-clang-release:
        docker:
          - image: usiverify/verify-env:current
            auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
            environment:
                CMAKE_BUILD_TYPE: Release
                FLAGS: -Wall -Wextra -Werror

        steps:
            - checkout
            - run:
               name: Setup clang
               command: sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 60
            - run:
                name: Release build clang
                command: ./ci/run_commands.sh


    build-starexec-debug:
        docker:
            - image: usiverify/verify-env:starexec
              auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
              environment:
                CMAKE_BUILD_TYPE: Debug
                FLAGS: -Wall -Wextra -Werror

        steps:
            - checkout
            - run:
                name: Debug build gcc under devtoolset-8
                command: |
                    cat ./ci/run_commands.sh | scl enable devtoolset-8 bash


    build-starexec-release:
        docker:
            - image: usiverify/verify-env:starexec
              auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
              environment:
                CMAKE_BUILD_TYPE: Release
                FLAGS: -Wall -Wextra -Werror

        steps:
            - checkout
            - run:
                name: Release build gcc under devtoolset-8
                command: |
                    cat ./ci/build_maximally_static.sh | scl enable devtoolset-8 bash


    build-macos:
        macos:
            xcode: 13.4.1
        steps:
            - run: echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $BASH_ENV
            - run:
                name: Packages
                command: |
                  brew install cmake
                  brew install gmp
                  brew install bison
                  brew install flex
            - checkout
            - run:
                name: Store path
                command: echo 'export PATH=/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH' >> $BASH_ENV
            - run:
                name: Release build OS X
                command: ./ci/run_commands.sh
                environment:
                    CMAKE_BUILD_TYPE: Release
                    FLAGS: -Wall -Wextra -Werror

workflows:
  build-test:
      jobs:
        - formatter
        - build-starexec-debug:
          filters: &filters-build-test
            tags:
              only: /^v.*/
        - build-starexec-release:
          filters:
            <<: *filters-build-test
        - build-recent-clang-debug:
          filters:
            <<: *filters-build-test
        - build-recent-clang-release:
          filters:
            <<: *filters-build-test
        - build-recent-gcc-debug:
          filters:
            <<: *filters-build-test
        - build-recent-gcc-release:
          filters:
            <<: *filters-build-test
        - build-macos:
          filters:
            <<: *filters-build-test
